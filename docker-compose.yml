version: '3.8'

services:
  # dev:
  #   container_name: nestjs_api_dev
  #   image: nestjs-api-dev:1.0.0
  #   build:
  #     context: .
  #     target: development
  #     dockerfile: ./Dockerfile
  #   command: npm run start:debug
  #   ports:
  #     - 3000:3000
  #     - 9229:9229
  #   networks:
  #     - nesjs-network
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   restart: unless-stopped
  # prod:
  #   container_name: nestjs_api_prod
  #   image: nestjs-api-prod:1.0.0
  #   build:
  #     context: .
  #     target: production
  #     dockerfile: ./Dockerfile
  #   command: npm run start:prod
  #   ports:
  #     - 3000:3000
  #     - 9229:9229
  #   networks:
  #     - nesjs-network
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   restart: unless-stopped

  mysqldb:
    container_name: sqlcontainer
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3307:3306"
    expose:
      - 3306
    environment:
      MYSQL_DATABASE: project_main
      # MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: linh2001
      MYSQL_PASSWORD: linh2001
      SEERVICE_TAGS: prod
      SERVICE_NAME: mysqldb
    networks:
      - internalnet
  nodeapp:
    container_name: nodeappcontainer
    build: .
    image: nodeapp:v1
    restart: unless-stopped
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3000:8888
    expose:
      - 3000
    depends_on:
      - mysqldb
    environment:
      DB_HOST: mysqldb
      DB_USER: root
      DB_PASSWORD: 'linh2001'
      DB_NAME: project_main
      DB_PORT: 3306
      SERVER_PORT: 8888
      SEERVICE_TAGS: prod
      SERVICE_NAME: nodeappservice
    networks:
      - internalnet
networks:
  internalnet:
    driver: bridge
  nesjs-network:
